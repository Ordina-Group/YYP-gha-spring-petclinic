# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Build image
        run: ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=831947081981.dkr.ecr.eu-west-1.amazonaws.com/ypp-github-actions:v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::831947081981:role/YPP-github-actions
          aws-region: eu-west-1

      - name: Login to Amazon ECR Public
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ypp-github-actions
          IMAGE_TAG: v2
        run: |
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          
      - name: Deploy to App Runner Image
        id: deploy-apprunner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: YPP-actions-pet-clinic
          image: ${{ steps.build-image.outputs.image }}
          access-role-arn: arn:aws:apprunner:eu-west-1:831947081981:service/YPP-actions-pet-clinic/b8e4f790ee074f5a8567cad6e0d01771
          region: eu-west-1
          cpu : 1
          memory : 2
          # Deprecated: wait-for-service-stability: true
          # The new way to control service stability timeout
          wait-for-service-stability-seconds: 1200

